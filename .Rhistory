require(r4ss)
require(dplyr)
require(readr)
require(purrr)
require(kaputils)
devtools::source_url("https://raw.githubusercontent.com/mkapur/kaputils/master/R/SS_readforecastMK.R") ## use dev version
devtools::source_url("https://raw.githubusercontent.com/r4ss/r4ss/development/R/SS_ForeCatch.R") ## use dev version
devtools::source_url("https://raw.githubusercontent.com/mkapur/kaputils/master/R/SS_writeforecastMK.R") ## use dev version
# devtools::source_url("https://raw.githubusercontent.com/mkapur/kaputils/master/R/SS_executivesummaryMK.R")
## Execute automated forecasts
## TABLE G stitching ----
rootdir <- "C:/Users/Maia Kapur/Dropbox/UW/assessments/china_2019_update/chinarock-update-2019"
r = 'North'
rootdir.temp <- paste0(rootdir,"/cr",r )
lastrun <- paste0(rootdir.temp,"/forecasts/forecast2030")
basemod10 <- SS_output(lastrun, covar = TRUE)
SSplotSPR(basemod10)
SSplotSPR(basemod10,subplot = 3)
SSplotSPR(basemod10,subplot = 4)
SSplotSPR(basemod10,subplot = 4, plotdir = rootdir.temp, forecastplot = FALSE)
SSplotSPR(basemod10,subplot = 2, plotdir = rootdir.temp, forecastplot = FALSE)
SSplotSPR(basemod10,subplot = 4, plotdir = rootdir.temp, forecastplot = FALSE)
## Table I ----
## base M is -2.94, low is -2.99, high is -2.41
for(r in c('North','Central','South')){ ## loop regions
rootdir.temp <- paste0(rootdir,"/cr",r )
lastrun <- paste0(rootdir.temp,"/forecasts/forecast2030")
## make sure exec w hess -- can disable if certain
# setwd(rootdir.temp); system("ss3")
YOI <- 2010:2020
basemod10 <- SS_output(lastrun, covar = TRUE)
df<- data.frame()
for(y in 1:length(YOI)){
df["CommLandings",y] <- NA
df["TotCatch",y] <- basemod10$timeseries[, grepl('Yr|dead[(]B', names(basemod10$timeseries))] %>% filter(Yr == YOI[y]) %>% select(-Yr) %>% rowSums(.)
df["OFL",y] <-  ifelse(length(basemod10$derived_quants[grep(paste0("OFLCatch_",YOI[y],collapse = "|"), basemod10$derived_quants$Label),"Value"]) == 0, NA, basemod10$derived_quants[grep(paste0("OFLCatch_",YOI[y],collapse = "|"), basemod10$derived_quants$Label),"Value"])
df["ACL",y] <-  NA
df["1-SPR",y] <-  1- basemod10$derived_quants[grep(paste0("SPRratio_",YOI[y],collapse = "|"), basemod10$derived_quants$Label),"Value"]
df["ExploitationRate",y] <-  basemod10$derived_quants[grep(paste0("F_",YOI[y],collapse = "|"), basemod10$derived_quants$Label),"Value"]
df["A10+Biomass",y] <- subset(basemod10$timeseries[, c('Yr', 'Bio_smry')], Yr == YOI[y])$Bio_smry
df["SpawnBiomass",y] <-  basemod10$derived_quants[grep(paste0("SSB_",YOI[y],collapse = "|"), basemod10$derived_quants$Label),"Value"]
df["Spawnbio95CI",y] <-  paste0( round( as.numeric(df["SpawnBiomass",y])-1.96*basemod10$derived_quants[grep(paste0("SSB_",YOI[y],collapse = "|"), basemod10$derived_quants$Label),"StdDev"]),"--",
round(as.numeric(df["SpawnBiomass",y])+1.96*basemod10$derived_quants[grep(paste0("SSB_",YOI[y],collapse = "|"), basemod10$derived_quants$Label),"StdDev"]))
df["Rec",y] <- round(basemod10$derived_quants[grep(paste0("Recr_",YOI[y],collapse = "|"), basemod10$derived_quants$Label),"Value"],2)
df["Rec95CI",y] <- paste0( round(as.numeric(df["Rec",y])  - 1.96*basemod10$derived_quants[grep(paste0("Recr_",YOI[y],collapse = "|"), basemod10$derived_quants$Label),"StdDev"],2),"--",
round(as.numeric(df["Rec",y]) + 1.96*basemod10$derived_quants[grep(paste0("Recr_",YOI[y],collapse = "|"), basemod10$derived_quants$Label),"StdDev"],2))
# dq - qnorm(1-(1-quant)/2)*sd chantel this is 1.96
df["Depletion",y] <- paste0(round(basemod10$derived_quants[grep(paste0("Bratio_",YOI[y],collapse = "|"), basemod10$derived_quants$Label),"Value"],3)*100,"%")
df["Depl95CI",y] <- paste0( round(as.numeric(df["Rec",y])  - 1.96*basemod10$derived_quants[grep(paste0("Bratio_",YOI[y],collapse = "|"), basemod10$derived_quants$Label),"StdDev"],2),"--",
round(as.numeric(df["Rec",y] )+ 1.96*basemod10$derived_quants[grep(paste0("Bratio_",YOI[y],collapse = "|"), basemod10$derived_quants$Label),"StdDev"],2))
}
colnames(df)<- YOI
write.csv(df,paste0(rootdir.temp,"./",Sys.Date(),r,"table_i.csv"), row.names = TRUE)
## Figure E TS of Harvest rate: points with SE, red line with SPR50%
SSplotSummaryF(basemod10,  print = T, Ftgt = basemod10$derived_quants[grep("Fstd_SPRtgt", basemod10$derived_quants$Label),"Value"], plotdir = rootdir.temp)
SSplotCatch(basemod10, subplot = 2,  print = T, plotdir = rootdir.temp)
SSplotTimeseries(basemod10, subplot = 11, print = T, plotdir = rootdir.temp, forecastplot = FALSE)
SSplotTimeseries(basemod10, subplot = 9,  print = T, plotdir = rootdir.temp, forecastplot = FALSE)
SSplotSPR(basemod10,subplot = 4, plotdir = rootdir.temp, forecastplot = FALSE)
SSplotSPR(basemod10,subplot = 2, plotdir = rootdir.temp, forecastplot = FALSE)
SSB_sd.Yr <- basemod10$derived_quants[grep("SSB_", basemod10$derived_quants$Label),"StdDev"][1:134]
basemod10$timeseries %>%
select(Yr, SpawnBio) %>%
mutate(upper = SpawnBio + 1.96*SSB_sd.Yr, lwr = SpawnBio - 1.96*SSB_sd.Yr) %>%
ggplot(., aes(x= Yr, y = SpawnBio)) +
theme_classic()+
geom_line(lwd =1.1) +
# scale_x_continuous(limits = c(1900, 2019), breaks = seq(1900,2020,20)) +
# scale_y_continuous(limits = c(0,), breaks = seq(0,90,15)) +
geom_ribbon(aes(ymin = lwr, ymax = upper), alpha = 0.2) +
labs(x = 'Year', y = 'Spawning Biomass (000 mt)', title = r)
ggsave(last_plot(), file = paste0(rootdir.temp,"/",r,"_SSBtimeseries.png"), height = 4, width = 6, units = 'in', dpi = 420)
# data.frame("SPR" = basemod10$derived_quants[grep("SPRratio_", basemod10$derived_quants$Label),"Value"],
#              "sd" = basemod10$derived_quants[grep("SPRratio_", basemod10$derived_quants$Label),"StdDev"],
#              "Yr" = as.numeric(as.character(substr(basemod10$derived_quants[grep("SPRratio_", basemod10$derived_quants$Label),"Label"],10,14)))) %>%
#   filter(Yr < 2021) %>%
#   mutate(lwr = SPR-1.96*sd, upper = SPR+1.96*sd ) %>%
#   ggplot(., aes(x= Yr, y = 1-SPR)) +
#   theme_classic()+
#   geom_point()+
#   geom_hline(yintercept = basemod10$derived_quants[grep("Fstd_SPRtgt", basemod10$derived_quants$Label),"Value"], col = 'red')+
#   # scale_x_continuous(limits = c(1900, 2019), breaks = seq(1900,2020,20)) +
#   scale_y_continuous(limits = c(0,1)) +
#   geom_errorbar(aes(ymin = 1-lwr, ymax = 1-upper), col = 'grey22' ) +
#   labs(x = 'Year', y = '1-SPR', title = r)
# ggsave(last_plot(), file = paste0(rootdir.temp,"/",r,"_1-SPR.png"), height = 4, width = 6, units = 'in', dpi = 420)
}
SSplotTimeseries(basemod10, subplot = 11, print = T, plotdir = rootdir.temp, forecastplot = FALSE)
graphics.off()
r = 'North'
rootdir.temp <- paste0(rootdir,"/cr",r )
lastrun <- paste0(rootdir.temp,"/forecasts/forecast2030")
basemod10 <- SS_output(lastrun, covar = TRUE)
SSplotTimeseries(basemod10, subplot = 11, print = T, plotdir = rootdir.temp, forecastplot = FALSE)
SSplotTimeseries(basemod10, subplot = 9,  print = T, plotdir = rootdir.temp, forecastplot = FALSE)
rootdir.temp
SSplotTimeseries(basemod10, subplot = 9,  print = T, plotdir = rootdir.temp, forecastplot = FALSE)
SSplotTimeseries(basemod10, subplot = 11, print = T, plotdir = rootdir.temp, forecastplot = FALSE)
SSplotSPR(basemod10,subplot = 4, plotdir = rootdir.temp, forecastplot = FALSE)
SSplotSPR(basemod10,subplot = 2, plotdir = rootdir.temp, forecastplot = FALSE)
SSplotSPR(basemod10,subplot = 4, print = TRUE, plotdir = rootdir.temp, forecastplot = FALSE)
SSplotSPR(basemod10,subplot = 2, print = T, plotdir = rootdir.temp, forecastplot = FALSE)
## Table I ----
## base M is -2.94, low is -2.99, high is -2.41
for(r in c('North','Central','South')){ ## loop regions
rootdir.temp <- paste0(rootdir,"/cr",r )
lastrun <- paste0(rootdir.temp,"/forecasts/forecast2030")
## make sure exec w hess -- can disable if certain
# setwd(rootdir.temp); system("ss3")
YOI <- 2010:2020
basemod10 <- SS_output(lastrun, covar = TRUE)
df<- data.frame()
for(y in 1:length(YOI)){
df["CommLandings",y] <- NA
df["TotCatch",y] <- basemod10$timeseries[, grepl('Yr|dead[(]B', names(basemod10$timeseries))] %>% filter(Yr == YOI[y]) %>% select(-Yr) %>% rowSums(.)
df["OFL",y] <-  ifelse(length(basemod10$derived_quants[grep(paste0("OFLCatch_",YOI[y],collapse = "|"), basemod10$derived_quants$Label),"Value"]) == 0, NA, basemod10$derived_quants[grep(paste0("OFLCatch_",YOI[y],collapse = "|"), basemod10$derived_quants$Label),"Value"])
df["ACL",y] <-  NA
df["1-SPR",y] <-  1- basemod10$derived_quants[grep(paste0("SPRratio_",YOI[y],collapse = "|"), basemod10$derived_quants$Label),"Value"]
df["ExploitationRate",y] <-  basemod10$derived_quants[grep(paste0("F_",YOI[y],collapse = "|"), basemod10$derived_quants$Label),"Value"]
df["A10+Biomass",y] <- subset(basemod10$timeseries[, c('Yr', 'Bio_smry')], Yr == YOI[y])$Bio_smry
df["SpawnBiomass",y] <-  basemod10$derived_quants[grep(paste0("SSB_",YOI[y],collapse = "|"), basemod10$derived_quants$Label),"Value"]
df["Spawnbio95CI",y] <-  paste0( round( as.numeric(df["SpawnBiomass",y])-1.96*basemod10$derived_quants[grep(paste0("SSB_",YOI[y],collapse = "|"), basemod10$derived_quants$Label),"StdDev"]),"--",
round(as.numeric(df["SpawnBiomass",y])+1.96*basemod10$derived_quants[grep(paste0("SSB_",YOI[y],collapse = "|"), basemod10$derived_quants$Label),"StdDev"]))
df["Rec",y] <- round(basemod10$derived_quants[grep(paste0("Recr_",YOI[y],collapse = "|"), basemod10$derived_quants$Label),"Value"],2)
df["Rec95CI",y] <- paste0( round(as.numeric(df["Rec",y])  - 1.96*basemod10$derived_quants[grep(paste0("Recr_",YOI[y],collapse = "|"), basemod10$derived_quants$Label),"StdDev"],2),"--",
round(as.numeric(df["Rec",y]) + 1.96*basemod10$derived_quants[grep(paste0("Recr_",YOI[y],collapse = "|"), basemod10$derived_quants$Label),"StdDev"],2))
# dq - qnorm(1-(1-quant)/2)*sd chantel this is 1.96
df["Depletion",y] <- paste0(round(basemod10$derived_quants[grep(paste0("Bratio_",YOI[y],collapse = "|"), basemod10$derived_quants$Label),"Value"],3)*100,"%")
df["Depl95CI",y] <- paste0( round(as.numeric(df["Rec",y])  - 1.96*basemod10$derived_quants[grep(paste0("Bratio_",YOI[y],collapse = "|"), basemod10$derived_quants$Label),"StdDev"],2),"--",
round(as.numeric(df["Rec",y] )+ 1.96*basemod10$derived_quants[grep(paste0("Bratio_",YOI[y],collapse = "|"), basemod10$derived_quants$Label),"StdDev"],2))
}
colnames(df)<- YOI
write.csv(df,paste0(rootdir.temp,"./",Sys.Date(),r,"table_i.csv"), row.names = TRUE)
## Figure E TS of Harvest rate: points with SE, red line with SPR50%
SSplotSummaryF(basemod10,  print = T, Ftgt = basemod10$derived_quants[grep("Fstd_SPRtgt", basemod10$derived_quants$Label),"Value"], plotdir = rootdir.temp)
SSplotCatch(basemod10, subplot = 2,  print = T, plotdir = rootdir.temp)
SSplotTimeseries(basemod10, subplot = 11, print = T, plotdir = rootdir.temp, forecastplot = FALSE)
SSplotTimeseries(basemod10, subplot = 9,  print = T, plotdir = rootdir.temp, forecastplot = FALSE)
SSplotSPR(basemod10,subplot = 4, print = TRUE, plotdir = rootdir.temp, forecastplot = FALSE)
SSplotSPR(basemod10,subplot = 2, print = T, plotdir = rootdir.temp, forecastplot = FALSE)
SSB_sd.Yr <- basemod10$derived_quants[grep("SSB_", basemod10$derived_quants$Label),"StdDev"][1:134]
basemod10$timeseries %>%
select(Yr, SpawnBio) %>%
mutate(upper = SpawnBio + 1.96*SSB_sd.Yr, lwr = SpawnBio - 1.96*SSB_sd.Yr) %>%
ggplot(., aes(x= Yr, y = SpawnBio)) +
theme_classic()+
geom_line(lwd =1.1) +
# scale_x_continuous(limits = c(1900, 2019), breaks = seq(1900,2020,20)) +
# scale_y_continuous(limits = c(0,), breaks = seq(0,90,15)) +
geom_ribbon(aes(ymin = lwr, ymax = upper), alpha = 0.2) +
labs(x = 'Year', y = 'Spawning Biomass (000 mt)', title = r)
ggsave(last_plot(), file = paste0(rootdir.temp,"/",r,"_SSBtimeseries.png"), height = 4, width = 6, units = 'in', dpi = 420)
# data.frame("SPR" = basemod10$derived_quants[grep("SPRratio_", basemod10$derived_quants$Label),"Value"],
#              "sd" = basemod10$derived_quants[grep("SPRratio_", basemod10$derived_quants$Label),"StdDev"],
#              "Yr" = as.numeric(as.character(substr(basemod10$derived_quants[grep("SPRratio_", basemod10$derived_quants$Label),"Label"],10,14)))) %>%
#   filter(Yr < 2021) %>%
#   mutate(lwr = SPR-1.96*sd, upper = SPR+1.96*sd ) %>%
#   ggplot(., aes(x= Yr, y = 1-SPR)) +
#   theme_classic()+
#   geom_point()+
#   geom_hline(yintercept = basemod10$derived_quants[grep("Fstd_SPRtgt", basemod10$derived_quants$Label),"Value"], col = 'red')+
#   # scale_x_continuous(limits = c(1900, 2019), breaks = seq(1900,2020,20)) +
#   scale_y_continuous(limits = c(0,1)) +
#   geom_errorbar(aes(ymin = 1-lwr, ymax = 1-upper), col = 'grey22' ) +
#   labs(x = 'Year', y = '1-SPR', title = r)
# ggsave(last_plot(), file = paste0(rootdir.temp,"/",r,"_1-SPR.png"), height = 4, width = 6, units = 'in', dpi = 420)
}
regnames
# regnames <- basename(regdirs)
regnames <- basename(dirname(list.files(regdirs, recursive = FALSE, full.names = TRUE)[grep(paste0(Sys.Date(),'table_i.csv'),list.files(regdirs,recursive = FALSE,full.names = TRUE))]))
regdirs <- list.dirs(rootdir,recursive = FALSE)[grep('cr',list.dirs(rootdir,recursive = FALSE))]
# regnames <- basename(regdirs)
regnames <- basename(dirname(list.files(regdirs, recursive = FALSE, full.names = TRUE)[grep(paste0(Sys.Date(),'table_i.csv'),list.files(regdirs,recursive = FALSE,full.names = TRUE))]))
regnames
# regnames <- basename(regdirs)
regnames <- basename(dirname(list.files(regdirs, recursive = FALSE, full.names = TRUE)[grep('table_i.csv',list.files(regdirs,recursive = FALSE,full.names = TRUE))]))
regnames
regnames <- basename(regdirs)
basename(regdirs)
regnames
# regnames <- basename(regdirs)
regnames <- basename(dirname(list.files(regdirs, recursive = FALSE, full.names = TRUE)[grep('table_i.csv',list.files(regdirs,recursive = FALSE,full.names = TRUE))]))
regnames
list.files(regdirs, recursive = FALSE, full.names = TRUE)[grep(paste0('table_i.csv'),list.files(regdirs,recursive = FALSE,full.names = TRUE))]
basename(regnames)
apply(basename(regnames), rep(20))
list.files(regdirs, recursive = FALSE, full.names = TRUE)[grep(paste0('table_i.csv'),list.files(regdirs,recursive = FALSE,full.names = TRUE))] %>%
lapply(.,read.csv)
df <- list.files(regdirs, recursive = FALSE, full.names = TRUE)[grep(paste0('table_i.csv'),list.files(regdirs,recursive = FALSE,full.names = TRUE))] %>%
lapply(.,read.csv) %>%
bind_rows()
for(i in 1:length(basename(regnames))){
df$REG[(1:13)*i] <- basename(regnames)[i]
}
head(df)
sub("cr","",basename(regnames)[i])
for(i in 1:length(basename(regnames))){
df$REG[(1:13)*i] <- sub("cr","",basename(regnames)[i])
}
write.csv(df,paste0(rootdir,"/",Sys.Date(),"summary_table_i.csv"), row.names = TRUE)
(1:13)+c(0,13,26)[i]
i
for(i in 1:length(basename(regnames))){
idx <- (1:13)+c(0,13,26)[i]
df$REG[idx] <- sub("cr","",basename(regnames)[i])
}
write.csv(df,paste0(rootdir,"/",Sys.Date(),"summary_table_i.csv"), row.names = TRUE)
