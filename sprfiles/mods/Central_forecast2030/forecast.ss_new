#V3.24U
#C forecast file written by R function SS_writeforecast
#C rerun model to get more complete formatting in forecast.ss_new
#C should work with SS version: 3.24
#C file write time: 2019-06-24 09:34:46
# for all year entries except rebuilder; enter either: actual year, -999 for styr, 0 for endyr, neg number for rel. endyr
1 # Benchmarks: 0=skip; 1=calc F_spr,F_btgt,F_msy 
2 # MSY: 1= set to F(SPR); 2=calc F(MSY); 3=set to F(Btgt); 4=set to F(endyr) 
0.5 # SPR target (e.g. 0.40)
0.4 # Biomass target (e.g. 0.40)
#_Bmark_years: beg_bio, end_bio, beg_selex, end_selex, beg_relF, end_relF (enter actual year, or values of 0 or -integer to be rel. endyr)
 0 0 0 0 0 0
#  2014 2014 2014 2014 2014 2014 # after processing 
1 #Bmark_relF_Basis: 1 = use year range; 2 = set relF same as forecast below
#
1 # Forecast: 0=none; 1=F(SPR); 2=F(MSY) 3=F(Btgt); 4=Ave F (uses first-last relF yrs); 5=input annual F scalar
17 # N forecast years 
1 # F scalar (only used for Do_Forecast==5)
#_Fcast_years:  beg_selex, end_selex, beg_relF, end_relF  (enter actual year, or values of 0 or -integer to be rel. endyr)
 0 0 0 0
#  2014 2014 2014 2014 # after processing 
3 # Control rule method (1=catch=f(SSB) west coast; 2=F=f(SSB) ) 
0.4 # Control rule Biomass level for constant F (as frac of Bzero, e.g. 0.40); (Must be > the no F level below) 
0.1 # Control rule Biomass level for no F (as frac of Bzero, e.g. 0.10) 
0.773 # Control rule target as fraction of Flimit (e.g. 0.75) 
3 #_N forecast loops (1=OFL only; 2=ABC; 3=get F from forecast ABC catch with allocations applied)
3 #_First forecast loop with stochastic recruitment
0 #_Forecast loop control #3 (reserved for future bells&whistles) 
0 #_Forecast loop control #4 (reserved for future bells&whistles) 
0 #_Forecast loop control #5 (reserved for future bells&whistles) 
2030  #FirstYear for caps and allocations (should be after years with fixed inputs) 
0 # stddev of log(realized catch/target catch) in forecast (set value>0.0 to cause active impl_error)
0 # Do West Coast gfish rebuilder output (0/1) 
1999 # Rebuilder:  first year catch could have been set to zero (Ydecl)(-1 to set to 1999)
2015 # Rebuilder:  year for current age structure (Yinit) (-1 to set to endyear+1)
2 # fleet relative F:  1=use first-last alloc year; 2=read seas(row) x fleet(col) below
# Note that fleet allocation is used directly as average F if Do_Forecast=4 
2 # basis for fcast catch tuning and for fcast catch caps and allocation  (2=deadbio; 3=retainbio; 5=deadnum; 6=retainnum)
# Conditional input if relative F choice = 2
# Fleet relative F:  rows are seasons, columns are fleets
#_Fleet:  1_CA_NorthOf4010_Comm_Dead 2_CA_NorthOf4010_Comm_Live 3_CA_NorthOf4010_Rec_PC 4_CA_NorthOf4010_Rec_PR 5_OR_SouthernOR_Comm_Dead 6_OR_SouthernOR_Comm_Live 7_OR_SouthernOR_Rec_PC 8_OR_SouthernOR_Rec_PR 9_OR_NorthernOR_Comm 10_OR_NorthernOR_Rec_PC 11_OR_NorthernOR_Rec_PR
 0.00322048 0.018368 0.0182873 0.118347 0.0879851 0.540478 0.0328849 0.0670852 0.0186353 0.063139 0.0315695
# max totalcatch by fleet (-1 to have no max) must enter value for each fleet
 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
# max totalcatch by area (-1 to have no max); must enter value for each fleet 
 -1
# fleet assignment to allocation group (enter group ID# for each fleet, 0 for not included in an alloc group)
 0 0 0 0 0 0 0 0 0 0 0
#_Conditional on >1 allocation group
# allocation fraction for each of: 0 allocation groups
# no allocation groups
165 # Number of forecast catch levels to input (else calc catch from forecast F) 
-1 # code means to read fleet/time specific basis (2=dead catch; 3=retained catch; 99=F)  as below (units are from fleetunits; note new codes in SSV3.20)
# Input fixed catch values
#Year Seas Fleet Catch(or_F) Basis
 2015 1 1 0.02 2
 2015 1 2 0.06 2
 2015 1 3 0.06 2
 2015 1 4 0.44 2
 2015 1 5 0.48 2
 2015 1 6 2.44 2
 2015 1 7 0.12 2
 2015 1 8 0.31 2
 2015 1 9 0.02 2
 2015 1 10 0.34 2
 2015 1 11 0.35 2
 2016 1 1 0.02 2
 2016 1 2 0.06 2
 2016 1 3 0.06 2
 2016 1 4 0.45 2
 2016 1 5 0.5 2
 2016 1 6 2.52 2
 2016 1 7 0.12 2
 2016 1 8 0.32 2
 2016 1 9 0.02 2
 2016 1 10 0.35 2
 2016 1 11 0.36 2
 2017 1 1 0.0352986 2
 2017 1 2 0.212857 2
 2017 1 3 0.131 2
 2017 1 4 0.65 2
 2017 1 5 0.40279 2
 2017 1 6 3.43233 2
 2017 1 7 0 2
 2017 1 8 0 2
 2017 1 9 0.035834 2
 2017 1 10 0.004 2
 2017 1 11 0 2
 2018 1 1 0.0235414 2
 2018 1 2 0.0904917 2
 2018 1 3 0.205 2
 2018 1 4 0.587 2
 2018 1 5 0.433634 2
 2018 1 6 3.01276 2
 2018 1 7 0.035 2
 2018 1 8 0.02 2
 2018 1 9 0 2
 2018 1 10 0.043 2
 2018 1 11 0 2
 2019 1 1 0.021183 2
 2019 1 2 0.180076 2
 2019 1 3 0.159995 2
 2019 1 4 0.710085 2
 2019 1 5 0.596474 2
 2019 1 6 3.60878 2
 2019 1 7 0.402746 2
 2019 1 8 0.786485 2
 2019 1 9 0.156989 2
 2019 1 10 0.720759 2
 2019 1 11 0.325029 2
 2020 1 1 0.027783 2
 2020 1 2 0.0992007 2
 2020 1 3 0.118056 2
 2020 1 4 1.08933 2
 2020 1 5 0.7413 2
 2020 1 6 4.60895 2
 2020 1 7 0.409959 2
 2020 1 8 0.839668 2
 2020 1 9 0.126353 2
 2020 1 10 0.816382 2
 2020 1 11 0.450894 2
 2021 1 1 0.07 2
 2021 1 2 0.4 2
 2021 1 3 0.22 2
 2021 1 4 1.64 2
 2021 1 5 1.74 2
 2021 1 6 10.93 2
 2021 1 7 0.43 2
 2021 1 8 0.85 2
 2021 1 9 0.37 2
 2021 1 10 1.05 2
 2021 1 11 0.53 2
 2022 1 1 0.07 2
 2022 1 2 0.39 2
 2022 1 3 0.21 2
 2022 1 4 1.59 2
 2022 1 5 1.68 2
 2022 1 6 10.59 2
 2022 1 7 0.41 2
 2022 1 8 0.82 2
 2022 1 9 0.36 2
 2022 1 10 1.02 2
 2022 1 11 0.51 2
 2023 1 1 0.06 2
 2023 1 2 0.38 2
 2023 1 3 0.2 2
 2023 1 4 1.54 2
 2023 1 5 1.63 2
 2023 1 6 10.26 2
 2023 1 7 0.4 2
 2023 1 8 0.79 2
 2023 1 9 0.35 2
 2023 1 10 0.99 2
 2023 1 11 0.5 2
 2024 1 1 0.06 2
 2024 1 2 0.37 2
 2024 1 3 0.2 2
 2024 1 4 1.49 2
 2024 1 5 1.58 2
 2024 1 6 9.96 2
 2024 1 7 0.39 2
 2024 1 8 0.77 2
 2024 1 9 0.33 2
 2024 1 10 0.96 2
 2024 1 11 0.48 2
 2025 1 1 0.06 2
 2025 1 2 0.36 2
 2025 1 3 0.19 2
 2025 1 4 1.45 2
 2025 1 5 1.54 2
 2025 1 6 9.7 2
 2025 1 7 0.38 2
 2025 1 8 0.75 2
 2025 1 9 0.33 2
 2025 1 10 0.94 2
 2025 1 11 0.47 2
 2026 1 1 0.06 2
 2026 1 2 0.35 2
 2026 1 3 0.19 2
 2026 1 4 1.41 2
 2026 1 5 1.5 2
 2026 1 6 9.45 2
 2026 1 7 0.37 2
 2026 1 8 0.73 2
 2026 1 9 0.32 2
 2026 1 10 0.91 2
 2026 1 11 0.46 2
 2027 1 1 0.06 2
 2027 1 2 0.34 2
 2027 1 3 0.18 2
 2027 1 4 1.38 2
 2027 1 5 1.46 2
 2027 1 6 9.24 2
 2027 1 7 0.36 2
 2027 1 8 0.71 2
 2027 1 9 0.31 2
 2027 1 10 0.89 2
 2027 1 11 0.45 2
 2028 1 1 0.06 2
 2028 1 2 0.33 2
 2028 1 3 0.18 2
 2028 1 4 1.34 2
 2028 1 5 1.43 2
 2028 1 6 9.03 2
 2028 1 7 0.35 2
 2028 1 8 0.69 2
 2028 1 9 0.3 2
 2028 1 10 0.87 2
 2028 1 11 0.43 2
 2029 1 1 0.06 2
 2029 1 2 0.33 2
 2029 1 3 0.17 2
 2029 1 4 1.32 2
 2029 1 5 1.4 2
 2029 1 6 8.85 2
 2029 1 7 0.34 2
 2029 1 8 0.68 2
 2029 1 9 0.3 2
 2029 1 10 0.85 2
 2029 1 11 0.43 2
#
999 # verify end of input 
