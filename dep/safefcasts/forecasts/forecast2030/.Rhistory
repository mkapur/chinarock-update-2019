fore$Nforecastyrs <- 2031-mod$endyr
fore$FirstYear_for_caps_and_allocations <- 2021+(t-1)
fore$Ncatch <- 15+(3*t) ## check this
fore$InputBasis <- 2
## Now Add Catch data/projections thru 2020 if this is base_1.
## Otherwise this gets copied.
inityr <- max(fore$ForeCatch$Year)
for(k in 1:(2020-inityr)){
term <- nrow(fore$ForeCatch) ## intital final row
for(i in 1:mod$nfleets){
fore$ForeCatch[term+i,'Year'] <- inityr+k
fore$ForeCatch[term+i,'Seas'] <- 1
fore$ForeCatch[term+i,'Fleet'] <- i
fore$ForeCatch[term+i,'Catch_or_F'] <- catch_projections[catch_projections$YEAR == inityr+k,5+(i-1)]
} ## end nfleets
} ## end yrs to 2020
# Step 5b. Iterate the forecast file -- only if not first iter
## Find the total forecasted catch and OFL in 2021 in the Report.sso file
## may be able to do with SS_forecatch
## Allocate this catch among the fleets according to the given proportions; add this to forecast file
if(t > 1){ ## add a single year of catch
# mod1 <- SS_output(paste0(rootdir,"/forecasts/forecast2021"), covar = FALSE)
tempForeCatch <- SS_ForeCatchDEV(mod1,
yrs = (2021+(t-2)),
average = FALSE,
total = df$PredOFL[df$Year %in% (2021+(t-2))]) ## total are the total catches for each year, given by OFLcatch
# for(k in c(2021:2030)[1:(t-1)]){
#   term <- nrow(fore$ForeCatch) ## intital final row
#   OFL_temp <- df$PredOFL[df$Year == k]
#   pstar_temp <- catch_projections$PSTAR_0.45[catch_projections$YEAR==k]
#   for(i in 1:mod$nfleets){
#     fore$ForeCatch[term+i,'Year'] <- k
#     fore$ForeCatch[term+i,'Seas'] <- 1
#     fore$ForeCatch[term+i,'Fleet'] <- i
#     fore$ForeCatch[term+i,'Catch_or_F'] <- OFL_temp*pstar_temp*catch_projections[catch_projections$YEAR == k,(5+(i-1))]
#   } ## end nfleets
fore$ForeCatch[(nrow(fore$ForeCatch)+1):(nrow(fore$ForeCatch)+nrow(tempForeCatch)),] <- tempForeCatch[,1:4]
} ## end forecast T if t > 1
cat(paste0('Added forecast catch thru year ',2021+(t-1),"\n"))
## Steps 4.b. fix forecast file to end year selectivity
fore$Bmark_years[1:6] <- 0
fore$Fcast_years[1:4] <- 0
## Step 4.d. Fix trawl relative F to reflect proportional catch amounts by fleet in forecast.
fore$fleet_relative_F <- 2 ## will cause original r4ss write_forecast to fail
fore$vals_fleet_relative_f <- paste(paste0(catch_projections[catch_projections$YEAR == 2021+(t-1),5:7]), collapse = " ")
fore$basis_for_fcast_catch_tuning <- 2 ## deadbiomass
## Step 5a. Input correct buffer fraction
fore$Flimitfraction <- catch_projections$PSTAR_0.45[catch_projections$YEAR == 2021+(t-1)]
## save file
SS_writeforecastMK(fore, file = './forecast.ss', overwrite = TRUE)
## execute model
system('ss3 -nohess') ## works
# Fore202X <- mod$derived_quants[mod$derived_quants$Label == paste0("ForeCatch_",2021+(t-1)),"Value"]
# OFL202X <- mod1$derived_quants[mod1$derived_quants$Label == paste0("OFLCatch_",2021+(t-1)),"Value"]
if(t == 1){
## this will read the output of the first model and save the OFLs
## which will get used to comptue subsequent mods
mod1 <- SS_output(paste0(rootdir,"/forecasts/forecast2021"), covar = FALSE)
df[1:16,"Year"] <- 2015:2030
df[1:16,"PredOFL"] <- mod1$derived_quants[grep(paste0("ForeCatch_",2015:2030,collapse = "|"), mod1$derived_quants$Label),"Value"]
df[1:16,"ForeCatch"] <-mod1$derived_quants[grep(paste0("OFLCatch_",2015:2030,collapse = "|"), mod1$derived_quants$Label),"Value"]
df[1:16,"Landings"] <- NA
df[1:16,"Age10+Biomass"] <- NA
df[1:16,"SpawnBio"] <-mod1$derived_quants[grep(paste0("SSB_",2015:2030,collapse = "|"), mod1$derived_quants$Label),"Value"]
df[1:16,"Depletion"] <- paste0(round(mod1$derived_quants[grep(paste0("Bratio_",2015:2030,collapse = "|"), mod1$derived_quants$Label),"Value"],3)*100,"%")
for(i in 2015:2030){ ## grab ovserved and/or forecast catch for all fleets f
df$FiveYrAvgCatch[df$Year == i] <- mean(c(mod1$catch$Obs[mod1$catch$Yr %in% c(i:(i-5))],
mod1$derived_quants[grep(paste0("ForeCatch_",i:(i-5),collapse = "|"), mod1$derived_quants$Label),"Value"]))
} ## end 5yr avg
# df[,2:4] <- round(df[,2:(ncol(df)-1)])
} ## end make df if t == 1
cat(paste0('Executed model with forecast thru year',2021+(t-1),"\n"))
# Step 5c. Iterate through 2030 -- the loop will continue making a new folder each time
}
t
tempForeCatch <- SS_ForeCatchDEV(mod1,
yrs = 2021:(2021+(t-2)),
average = FALSE,
total = df$PredOFL[df$Year %in% (2021+(t-2))]) ## total are the total catches for each year, given by OFLcatch
tempForeCatch
## Step 2 Change first numerical term in Starter file to 1
## I like to copy into a new folder just in case -- this will paste EVERYTHING from basedir into base_1
df <- data.frame()
for(t in 1:10){
base_temp <- paste0("forecasts/forecast", (t-1)+2021)
setwd(rootdir); if(exists(base_temp)) unlink(base_temp, force = TRUE)
dir.create(base_temp)
file.copy(list.files(
paste0(rootdir,"/",basedir),
full.names = TRUE,
recursive = TRUE), base_temp)
## execute the changed model -- on a mac use "shell" instead of "system"
setwd(base_temp)
strt <- SS_readstarter(file = "starter.ss")
strt$init_values_src <- 1
strt$last_estimation_phase <- 10 ## could go as high as 20
SS_writestarter(strt, file = "starter.ss", overwrite = TRUE)
# system("ss3 -nohess") ## testing OK
## Steps 3. Par File - add zeroes
# file.copy("C:/Users/mkapur/Dropbox/UW/chinarock_update/base2015_inputfiles/ss3.par",
# "ss3.par", overwrite = TRUE)
mpar <- readLines("ss3.par")
LOI <- grep("Fcast",mpar)+1 ## get line(s) containing data after fcast
NewLine <- strsplit(mpar[LOI],"0 ") ## split elements
length(NewLine[[1]]);length(NewLine[[2]])
for(a in 1:length(NewLine)){
ltemp <- length(NewLine[[a]])
NewLine[[a]][1:ltemp] <- " "  ## wipe all
NewLine[[a]][1:(ltemp+(2019-mod$endyr))] <- 0.000000000000 ## add  zeroes to end
mpar[LOI][a] = paste0(NewLine[[a]], collapse = " ")
}
NewLine <- strsplit(mpar[LOI],"0 ") ## split elements
length(NewLine[[1]]);length(NewLine[[2]])
writeLines(text=mpar, con="ss3.par") ## save it
# system("ss3 -nohess")
## Step 4a. Add catch/projections through 2020.
fore <- SS_readforecast(file = './forecast.ss',
Nareas = mod$nareas,
Nfleets = mod$nfleets,
version = '3.24',
readAll = TRUE)
fore$Nforecastyrs <- 2031-mod$endyr
fore$FirstYear_for_caps_and_allocations <- 2021+(t-1)
fore$Ncatch <- 15+(3*t) ## check this
fore$InputBasis <- 2
## Now Add Catch data/projections thru 2020 if this is base_1.
## Otherwise this gets copied.
inityr <- max(fore$ForeCatch$Year)
for(k in 1:(2020-inityr)){
term <- nrow(fore$ForeCatch) ## intital final row
for(i in 1:mod$nfleets){
fore$ForeCatch[term+i,'Year'] <- inityr+k
fore$ForeCatch[term+i,'Seas'] <- 1
fore$ForeCatch[term+i,'Fleet'] <- i
fore$ForeCatch[term+i,'Catch_or_F'] <- catch_projections[catch_projections$YEAR == inityr+k,5+(i-1)]
} ## end nfleets
} ## end yrs to 2020
# Step 5b. Iterate the forecast file -- only if not first iter
## Find the total forecasted catch and OFL in 2021 in the Report.sso file
## may be able to do with SS_forecatch
## Allocate this catch among the fleets according to the given proportions; add this to forecast file
if(t > 1){ ## add a single year of catch
# mod1 <- SS_output(paste0(rootdir,"/forecasts/forecast2021"), covar = FALSE)
tempForeCatch <- SS_ForeCatchDEV(mod1,
yrs = 2021:(2021+(t-2)),
average = FALSE,
total = df$PredOFL[df$Year %in% (2021+(t-2))]) ## total are the total catches for each year, given by OFLcatch
# for(k in c(2021:2030)[1:(t-1)]){
#   term <- nrow(fore$ForeCatch) ## intital final row
#   OFL_temp <- df$PredOFL[df$Year == k]
#   pstar_temp <- catch_projections$PSTAR_0.45[catch_projections$YEAR==k]
#   for(i in 1:mod$nfleets){
#     fore$ForeCatch[term+i,'Year'] <- k
#     fore$ForeCatch[term+i,'Seas'] <- 1
#     fore$ForeCatch[term+i,'Fleet'] <- i
#     fore$ForeCatch[term+i,'Catch_or_F'] <- OFL_temp*pstar_temp*catch_projections[catch_projections$YEAR == k,(5+(i-1))]
#   } ## end nfleets
fore$ForeCatch[(nrow(fore$ForeCatch)+1):(nrow(fore$ForeCatch)+nrow(tempForeCatch)),] <- tempForeCatch[,1:4]
} ## end forecast T if t > 1
cat(paste0('Added forecast catch thru year ',2021+(t-1),"\n"))
## Steps 4.b. fix forecast file to end year selectivity
fore$Bmark_years[1:6] <- 0
fore$Fcast_years[1:4] <- 0
## Step 4.d. Fix trawl relative F to reflect proportional catch amounts by fleet in forecast.
fore$fleet_relative_F <- 2 ## will cause original r4ss write_forecast to fail
fore$vals_fleet_relative_f <- paste(paste0(catch_projections[catch_projections$YEAR == 2021+(t-1),5:7]), collapse = " ")
fore$basis_for_fcast_catch_tuning <- 2 ## deadbiomass
## Step 5a. Input correct buffer fraction
fore$Flimitfraction <- catch_projections$PSTAR_0.45[catch_projections$YEAR == 2021+(t-1)]
## save file
SS_writeforecastMK(fore, file = './forecast.ss', overwrite = TRUE)
## execute model
system('ss3 -nohess') ## works
# Fore202X <- mod$derived_quants[mod$derived_quants$Label == paste0("ForeCatch_",2021+(t-1)),"Value"]
# OFL202X <- mod1$derived_quants[mod1$derived_quants$Label == paste0("OFLCatch_",2021+(t-1)),"Value"]
if(t == 1){
## this will read the output of the first model and save the OFLs
## which will get used to comptue subsequent mods
mod1 <- SS_output(paste0(rootdir,"/forecasts/forecast2021"), covar = FALSE)
df[1:16,"Year"] <- 2015:2030
df[1:16,"PredOFL"] <- mod1$derived_quants[grep(paste0("ForeCatch_",2015:2030,collapse = "|"), mod1$derived_quants$Label),"Value"]
df[1:16,"ForeCatch"] <-mod1$derived_quants[grep(paste0("OFLCatch_",2015:2030,collapse = "|"), mod1$derived_quants$Label),"Value"]
df[1:16,"Landings"] <- NA
df[1:16,"Age10+Biomass"] <- NA
df[1:16,"SpawnBio"] <-mod1$derived_quants[grep(paste0("SSB_",2015:2030,collapse = "|"), mod1$derived_quants$Label),"Value"]
df[1:16,"Depletion"] <- paste0(round(mod1$derived_quants[grep(paste0("Bratio_",2015:2030,collapse = "|"), mod1$derived_quants$Label),"Value"],3)*100,"%")
for(i in 2015:2030){ ## grab ovserved and/or forecast catch for all fleets f
df$FiveYrAvgCatch[df$Year == i] <- mean(c(mod1$catch$Obs[mod1$catch$Yr %in% c(i:(i-5))],
mod1$derived_quants[grep(paste0("ForeCatch_",i:(i-5),collapse = "|"), mod1$derived_quants$Label),"Value"]))
} ## end 5yr avg
# df[,2:4] <- round(df[,2:(ncol(df)-1)])
} ## end make df if t == 1
cat(paste0('Executed model with forecast thru year ',2021+(t-1),"\n"))
# Step 5c. Iterate through 2030 -- the loop will continue making a new folder each time
}
for(t in 1:10){
base_temp <- paste0("forecasts/forecast", (t-1)+2021)
setwd(rootdir); if(exists(base_temp)) unlink(base_temp, force = TRUE)
dir.create(base_temp)
file.copy(list.files(
paste0(rootdir,"/",basedir),
full.names = TRUE,
recursive = TRUE), base_temp)
## execute the changed model -- on a mac use "shell" instead of "system"
setwd(base_temp)
strt <- SS_readstarter(file = "starter.ss")
strt$init_values_src <- 1
strt$last_estimation_phase <- 10 ## could go as high as 20
SS_writestarter(strt, file = "starter.ss", overwrite = TRUE)
# system("ss3 -nohess") ## testing OK
## Steps 3. Par File - add zeroes
# file.copy("C:/Users/mkapur/Dropbox/UW/chinarock_update/base2015_inputfiles/ss3.par",
# "ss3.par", overwrite = TRUE)
mpar <- readLines("ss3.par")
LOI <- grep("Fcast",mpar)+1 ## get line(s) containing data after fcast
NewLine <- strsplit(mpar[LOI],"0 ") ## split elements
length(NewLine[[1]]);length(NewLine[[2]])
for(a in 1:length(NewLine)){
ltemp <- length(NewLine[[a]])
NewLine[[a]][1:ltemp] <- " "  ## wipe all
NewLine[[a]][1:(ltemp+(2019-mod$endyr))] <- 0.000000000000 ## add  zeroes to end
mpar[LOI][a] = paste0(NewLine[[a]], collapse = " ")
}
NewLine <- strsplit(mpar[LOI],"0 ") ## split elements
length(NewLine[[1]]);length(NewLine[[2]])
writeLines(text=mpar, con="ss3.par") ## save it
# system("ss3 -nohess")
## Step 4a. Add catch/projections through 2020.
fore <- SS_readforecast(file = './forecast.ss',
Nareas = mod$nareas,
Nfleets = mod$nfleets,
version = '3.24',
readAll = TRUE)
fore$Nforecastyrs <- 2031-mod$endyr
fore$FirstYear_for_caps_and_allocations <- 2021+(t-1)
fore$Ncatch <- 15+(3*t) ## check this
fore$InputBasis <- 2
## Now Add Catch data/projections thru 2020 if this is base_1.
## Otherwise this gets copied.
inityr <- max(fore$ForeCatch$Year)
for(k in 1:(2020-inityr)){
term <- nrow(fore$ForeCatch) ## intital final row
for(i in 1:mod$nfleets){
fore$ForeCatch[term+i,'Year'] <- inityr+k
fore$ForeCatch[term+i,'Seas'] <- 1
fore$ForeCatch[term+i,'Fleet'] <- i
fore$ForeCatch[term+i,'Catch_or_F'] <- catch_projections[catch_projections$YEAR == inityr+k,5+(i-1)]
} ## end nfleets
} ## end yrs to 2020
# Step 5b. Iterate the forecast file -- only if not first iter
## Find the total forecasted catch and OFL in 2021 in the Report.sso file
## may be able to do with SS_forecatch
## Allocate this catch among the fleets according to the given proportions; add this to forecast file
if(t > 1){ ## add a single year of catch
# mod1 <- SS_output(paste0(rootdir,"/forecasts/forecast2021"), covar = FALSE)
tempForeCatch <- SS_ForeCatchDEV(mod1,
yrs = 2021:(2021+(t-2)),
average = FALSE,
total = df$PredOFL[df$Year %in% (2021+(t-2))]) ## total are the total catches for each year, given by OFLcatch
# for(k in c(2021:2030)[1:(t-1)]){
#   term <- nrow(fore$ForeCatch) ## intital final row
#   OFL_temp <- df$PredOFL[df$Year == k]
#   pstar_temp <- catch_projections$PSTAR_0.45[catch_projections$YEAR==k]
#   for(i in 1:mod$nfleets){
#     fore$ForeCatch[term+i,'Year'] <- k
#     fore$ForeCatch[term+i,'Seas'] <- 1
#     fore$ForeCatch[term+i,'Fleet'] <- i
#     fore$ForeCatch[term+i,'Catch_or_F'] <- OFL_temp*pstar_temp*catch_projections[catch_projections$YEAR == k,(5+(i-1))]
#   } ## end nfleets
fore$ForeCatch[(nrow(fore$ForeCatch)+1):(nrow(fore$ForeCatch)+nrow(tempForeCatch)),] <- tempForeCatch[,1:4]
} ## end forecast T if t > 1
cat(paste0('Added forecast catch thru year ',2021+(t-1),"\n"))
## Steps 4.b. fix forecast file to end year selectivity
fore$Bmark_years[1:6] <- 0
fore$Fcast_years[1:4] <- 0
## Step 4.d. Fix trawl relative F to reflect proportional catch amounts by fleet in forecast.
fore$fleet_relative_F <- 2 ## will cause original r4ss write_forecast to fail
fore$vals_fleet_relative_f <- paste(paste0(catch_projections[catch_projections$YEAR == 2021+(t-1),5:7]), collapse = " ")
fore$basis_for_fcast_catch_tuning <- 2 ## deadbiomass
## Step 5a. Input correct buffer fraction
fore$Flimitfraction <- catch_projections$PSTAR_0.45[catch_projections$YEAR == 2021+(t-1)]
## save file
SS_writeforecastMK(fore, file = './forecast.ss', overwrite = TRUE)
## execute model
system('ss3 -nohess') ## works
# Fore202X <- mod$derived_quants[mod$derived_quants$Label == paste0("ForeCatch_",2021+(t-1)),"Value"]
# OFL202X <- mod1$derived_quants[mod1$derived_quants$Label == paste0("OFLCatch_",2021+(t-1)),"Value"]
if(t == 1){
## this will read the output of the first model and save the OFLs
## which will get used to comptue subsequent mods
mod1 <- SS_output(paste0(rootdir,"/forecasts/forecast2021"), covar = FALSE)
df[1:16,"Year"] <- 2015:2030
df[1:16,"PredOFL"] <- mod1$derived_quants[grep(paste0("ForeCatch_",2015:2030,collapse = "|"), mod1$derived_quants$Label),"Value"]
df[1:16,"ForeCatch"] <-mod1$derived_quants[grep(paste0("OFLCatch_",2015:2030,collapse = "|"), mod1$derived_quants$Label),"Value"]
df[1:16,"Landings"] <- NA
df[1:16,"Age10+Biomass"] <- NA
df[1:16,"SpawnBio"] <-mod1$derived_quants[grep(paste0("SSB_",2015:2030,collapse = "|"), mod1$derived_quants$Label),"Value"]
df[1:16,"Depletion"] <- paste0(round(mod1$derived_quants[grep(paste0("Bratio_",2015:2030,collapse = "|"), mod1$derived_quants$Label),"Value"],3)*100,"%")
for(i in 2015:2030){ ## grab ovserved and/or forecast catch for all fleets f
df$FiveYrAvgCatch[df$Year == i] <- mean(c(mod1$catch$Obs[mod1$catch$Yr %in% c(i:(i-5))],
mod1$derived_quants[grep(paste0("ForeCatch_",i:(i-5),collapse = "|"), mod1$derived_quants$Label),"Value"]))
} ## end 5yr avg
# df[,2:4] <- round(df[,2:(ncol(df)-1)])
} ## end make df if t == 1
cat(paste0('Executed model with forecast thru year ',2021+(t-1),"\n"))
# Step 5c. Iterate through 2030 -- the loop will continue making a new folder each time
}
t
base_temp <- paste0("forecasts/forecast", (t-1)+2021)
setwd(rootdir); if(exists(base_temp)) unlink(base_temp, force = TRUE)
dir.create(base_temp)
file.copy(list.files(
paste0(rootdir,"/",basedir),
full.names = TRUE,
recursive = TRUE), base_temp)
## execute the changed model -- on a mac use "shell" instead of "system"
setwd(base_temp)
strt <- SS_readstarter(file = "starter.ss")
strt$init_values_src <- 1
strt$last_estimation_phase <- 10 ## could go as high as 20
SS_writestarter(strt, file = "starter.ss", overwrite = TRUE)
# system("ss3 -nohess") ## testing OK
## Steps 3. Par File - add zeroes
# file.copy("C:/Users/mkapur/Dropbox/UW/chinarock_update/base2015_inputfiles/ss3.par",
# "ss3.par", overwrite = TRUE)
mpar <- readLines("ss3.par")
LOI <- grep("Fcast",mpar)+1 ## get line(s) containing data after fcast
NewLine <- strsplit(mpar[LOI],"0 ") ## split elements
length(NewLine[[1]]);length(NewLine[[2]])
for(a in 1:length(NewLine)){
ltemp <- length(NewLine[[a]])
NewLine[[a]][1:ltemp] <- " "  ## wipe all
NewLine[[a]][1:(ltemp+(2019-mod$endyr))] <- 0.000000000000 ## add  zeroes to end
mpar[LOI][a] = paste0(NewLine[[a]], collapse = " ")
}
NewLine <- strsplit(mpar[LOI],"0 ") ## split elements
length(NewLine[[1]]);length(NewLine[[2]])
writeLines(text=mpar, con="ss3.par") ## save it
# system("ss3 -nohess")
## Step 4a. Add catch/projections through 2020.
fore <- SS_readforecast(file = './forecast.ss',
Nareas = mod$nareas,
Nfleets = mod$nfleets,
version = '3.24',
readAll = TRUE)
fore$Nforecastyrs <- 2031-mod$endyr
fore$FirstYear_for_caps_and_allocations <- 2021+(t-1)
fore$Ncatch <- 15+(3*t) ## check this
fore$InputBasis <- 2
## Now Add Catch data/projections thru 2020 if this is base_1.
## Otherwise this gets copied.
inityr <- max(fore$ForeCatch$Year)
for(k in 1:(2020-inityr)){
term <- nrow(fore$ForeCatch) ## intital final row
for(i in 1:mod$nfleets){
fore$ForeCatch[term+i,'Year'] <- inityr+k
fore$ForeCatch[term+i,'Seas'] <- 1
fore$ForeCatch[term+i,'Fleet'] <- i
fore$ForeCatch[term+i,'Catch_or_F'] <- catch_projections[catch_projections$YEAR == inityr+k,5+(i-1)]
} ## end nfleets
} ## end yrs to 2020
# Step 5b. Iterate the forecast file -- only if not first iter
## Find the total forecasted catch and OFL in 2021 in the Report.sso file
## may be able to do with SS_forecatch
## Allocate this catch among the fleets according to the given proportions; add this to forecast file
if(t > 1){ ## add a single year of catch
# mod1 <- SS_output(paste0(rootdir,"/forecasts/forecast2021"), covar = FALSE)
tempForeCatch <- SS_ForeCatchDEV(mod1,
yrs = 2021:(2021+(t-2)),
average = FALSE,
total = df$PredOFL[df$Year %in% (2021+(t-2))]) ## total are the total catches for each year, given by OFLcatch
# for(k in c(2021:2030)[1:(t-1)]){
#   term <- nrow(fore$ForeCatch) ## intital final row
#   OFL_temp <- df$PredOFL[df$Year == k]
#   pstar_temp <- catch_projections$PSTAR_0.45[catch_projections$YEAR==k]
#   for(i in 1:mod$nfleets){
#     fore$ForeCatch[term+i,'Year'] <- k
#     fore$ForeCatch[term+i,'Seas'] <- 1
#     fore$ForeCatch[term+i,'Fleet'] <- i
#     fore$ForeCatch[term+i,'Catch_or_F'] <- OFL_temp*pstar_temp*catch_projections[catch_projections$YEAR == k,(5+(i-1))]
#   } ## end nfleets
fore$ForeCatch[(nrow(fore$ForeCatch)+1):(nrow(fore$ForeCatch)+nrow(tempForeCatch)),] <- tempForeCatch[,1:4]
} ## end forecast T if t > 1
cat(paste0('Added forecast catch thru year ',2021+(t-1),"\n"))
## Steps 4.b. fix forecast file to end year selectivity
fore$Bmark_years[1:6] <- 0
fore$Fcast_years[1:4] <- 0
## Step 4.d. Fix trawl relative F to reflect proportional catch amounts by fleet in forecast.
fore$fleet_relative_F <- 2 ## will cause original r4ss write_forecast to fail
fore$vals_fleet_relative_f <- paste(paste0(catch_projections[catch_projections$YEAR == 2021+(t-1),5:7]), collapse = " ")
fore$basis_for_fcast_catch_tuning <- 2 ## deadbiomass
## Step 5a. Input correct buffer fraction
fore$Flimitfraction <- catch_projections$PSTAR_0.45[catch_projections$YEAR == 2021+(t-1)]
## save file
SS_writeforecastMK(fore, file = './forecast.ss', overwrite = TRUE)
## execute model
system('ss3 -nohess') ## works
# Fore202X <- mod$derived_quants[mod$derived_quants$Label == paste0("ForeCatch_",2021+(t-1)),"Value"]
# OFL202X <- mod1$derived_quants[mod1$derived_quants$Label == paste0("OFLCatch_",2021+(t-1)),"Value"]
if(t == 1){
## this will read the output of the first model and save the OFLs
## which will get used to comptue subsequent mods
mod1 <- SS_output(paste0(rootdir,"/forecasts/forecast2021"), covar = FALSE)
df[1:16,"Year"] <- 2015:2030
df[1:16,"PredOFL"] <- mod1$derived_quants[grep(paste0("ForeCatch_",2015:2030,collapse = "|"), mod1$derived_quants$Label),"Value"]
df[1:16,"ForeCatch"] <-mod1$derived_quants[grep(paste0("OFLCatch_",2015:2030,collapse = "|"), mod1$derived_quants$Label),"Value"]
df[1:16,"Landings"] <- NA
df[1:16,"Age10+Biomass"] <- NA
df[1:16,"SpawnBio"] <-mod1$derived_quants[grep(paste0("SSB_",2015:2030,collapse = "|"), mod1$derived_quants$Label),"Value"]
df[1:16,"Depletion"] <- paste0(round(mod1$derived_quants[grep(paste0("Bratio_",2015:2030,collapse = "|"), mod1$derived_quants$Label),"Value"],3)*100,"%")
for(i in 2015:2030){ ## grab ovserved and/or forecast catch for all fleets f
df$FiveYrAvgCatch[df$Year == i] <- mean(c(mod1$catch$Obs[mod1$catch$Yr %in% c(i:(i-5))],
mod1$derived_quants[grep(paste0("ForeCatch_",i:(i-5),collapse = "|"), mod1$derived_quants$Label),"Value"]))
} ## end 5yr avg
# df[,2:4] <- round(df[,2:(ncol(df)-1)])
} ## end make df if t == 1
cat(paste0('Executed model with forecast thru year ',2021+(t-1),"\n"))
df
source(paste0(rootdir,"/SS_decision_table_stuff.R"))
SS_decision_table_stuff(mod1, yrs = 2015:2030)
ForecastC = mod1$timeseries[, grepl('Yr|retain[(]B[)]', names(mod1$timeseries))]
ForecastC$total = rowSums(ForecastC[, -1])
df[1:16,"Landings"] <- subset(ForecastC, Yr > (2021 - 1) & Yr < (2030 + 1))
subset(ForecastC, Yr > (2021 - 1) & Yr < (2030 + 1))
YOI <- 2015:2030
subset(ForecastC, Yr %in% YOI)$total
subset(mod1$timeseries[, c('Yr', 'Bio_smry')], Yr %in% YOI)
YOI <- 2015:2030
## this will read the output of the first model and save the OFLs
## which will get used to comptue subsequent mods
mod1 <- SS_output(paste0(rootdir,"/forecasts/forecast2021"), covar = FALSE)
df[1:16,"Year"] <- 2015:2030
df[1:16,"PredOFL"] <- mod1$derived_quants[grep(paste0("ForeCatch_",2015:2030,collapse = "|"), mod1$derived_quants$Label),"Value"]
df[1:16,"ForeCatch"] <-mod1$derived_quants[grep(paste0("OFLCatch_",2015:2030,collapse = "|"), mod1$derived_quants$Label),"Value"]
ForecastC = mod1$timeseries[, grepl('Yr|retain[(]B[)]', names(mod1$timeseries))]
ForecastC$total = rowSums(ForecastC[, -1])
df[1:16,"Landings"] <- subset(ForecastC, Yr %in% YOI)$total
df[1:16,"Age10+Biomass"] <- subset(mod1$timeseries[, c('Yr', 'Bio_smry')], Yr %in% YOI)$Bio_smry
df[1:16,"SpawnBio"] <-mod1$derived_quants[grep(paste0("SSB_",2015:2030,collapse = "|"), mod1$derived_quants$Label),"Value"]
df[1:16,"Depletion"] <- paste0(round(mod1$derived_quants[grep(paste0("Bratio_",2015:2030,collapse = "|"), mod1$derived_quants$Label),"Value"],3)*100,"%")
for(i in 2015:2030){ ## grab ovserved and/or forecast catch for all fleets f
df$FiveYrAvgCatch[df$Year == i] <- mean(c(mod1$catch$Obs[mod1$catch$Yr %in% c(i:(i-5))],
mod1$derived_quants[grep(paste0("ForeCatch_",i:(i-5),collapse = "|"), mod1$derived_quants$Label),"Value"]))
} ## end 5yr avg
df
head(mod1$timeseries)
head(mod1$timeseries[mod1$timeseries$Yr==2015])
View(mod1$timeseries)
df
YOI <- 2015:2030
## this will read the output of the first model and save the OFLs
## which will get used to comptue subsequent mods
mod1 <- SS_output(paste0(rootdir,"/forecasts/forecast2021"), covar = FALSE)
df[1:16,"Year"] <- 2015:2030
df[1:16,"PredOFL"] <- mod1$derived_quants[grep(paste0("ForeCatch_",2015:2030,collapse = "|"), mod1$derived_quants$Label),"Value"]
# df[1:16,"ForeCatch"] <-mod1$derived_quants[grep(paste0("OFLCatch_",2015:2030,collapse = "|"), mod1$derived_quants$Label),"Value"]
ForecastC = mod1$timeseries[, grepl('Yr|retain[(]B[)]', names(mod1$timeseries))]
ForecastC$total = rowSums(ForecastC[, -1])
df[1:16,"Landings"] <- subset(ForecastC, Yr %in% YOI)$total
df[1:16,"Age10+Biomass"] <- subset(mod1$timeseries[, c('Yr', 'Bio_smry')], Yr %in% YOI)$Bio_smry
df[1:16,"SpawnBio"] <-mod1$derived_quants[grep(paste0("SSB_",2015:2030,collapse = "|"), mod1$derived_quants$Label),"Value"]
df[1:16,"Depletion"] <- paste0(round(mod1$derived_quants[grep(paste0("Bratio_",2015:2030,collapse = "|"), mod1$derived_quants$Label),"Value"],3)*100,"%")
for(i in 2015:2030){ ## grab ovserved and/or forecast catch for all fleets f
df$FiveYrAvgCatch[df$Year == i] <- mean(c(mod1$catch$Obs[mod1$catch$Yr %in% c(i:(i-5))],
mod1$derived_quants[grep(paste0("ForeCatch_",i:(i-5),collapse = "|"), mod1$derived_quants$Label),"Value"]))
} ## end 5yr avg
df[,2:7] <- round(df[,2:6])
write.csv(df,file =paste0(rootdir,"decision_table_base.csv"),row.names = FALSE)
ROOTDIR
write.csv(df,file =paste0(rootdir,"/decision_table_base.csv"),row.names = FALSE)
YOI <- 2015:2030
## this will read the output of the first model and save the OFLs
## which will get used to comptue subsequent mods
df[1:16,"Year"] <- 2015:2030
df[1:16,"PredOFL"] <- mod1$derived_quants[grep(paste0("ForeCatch_",2015:2030,collapse = "|"), mod1$derived_quants$Label),"Value"]
# df[1:16,"ForeCatch"] <-mod1$derived_quants[grep(paste0("OFLCatch_",2015:2030,collapse = "|"), mod1$derived_quants$Label),"Value"]
ForecastC = mod1$timeseries[, grepl('Yr|retain[(]B[)]', names(mod1$timeseries))]
ForecastC$total = rowSums(ForecastC[, -1])
df[1:16,"Landings"] <- subset(ForecastC, Yr %in% YOI)$total
df[1:16,"Age10+Biomass"] <- subset(mod1$timeseries[, c('Yr', 'Bio_smry')], Yr %in% YOI)$Bio_smry
df[1:16,"SpawnBio"] <-mod1$derived_quants[grep(paste0("SSB_",2015:2030,collapse = "|"), mod1$derived_quants$Label),"Value"]
df[1:16,"Depletion"] <- paste0(round(mod1$derived_quants[grep(paste0("Bratio_",2015:2030,collapse = "|"), mod1$derived_quants$Label),"Value"],3)*100,"%")
for(i in 2015:2030){ ## grab ovserved and/or forecast catch for all fleets f
df$FiveYrAvgCatch[df$Year == i] <- mean(c(mod1$catch$Obs[mod1$catch$Yr %in% c(i:(i-5))],
mod1$derived_quants[grep(paste0("ForeCatch_",i:(i-5),collapse = "|"), mod1$derived_quants$Label),"Value"]))
} ## end 5yr avg
df[,2:7] <- round(df[,2:6],3)
df
df<-data.frame()
YOI <- 2015:2030
## this will read the output of the first model and save the OFLs
## which will get used to comptue subsequent mods
df[1:16,"Year"] <- 2015:2030
df[1:16,"PredOFL"] <- mod1$derived_quants[grep(paste0("ForeCatch_",2015:2030,collapse = "|"), mod1$derived_quants$Label),"Value"]
# df[1:16,"ForeCatch"] <-mod1$derived_quants[grep(paste0("OFLCatch_",2015:2030,collapse = "|"), mod1$derived_quants$Label),"Value"]
ForecastC = mod1$timeseries[, grepl('Yr|retain[(]B[)]', names(mod1$timeseries))]
ForecastC$total = rowSums(ForecastC[, -1])
df[1:16,"Landings"] <- subset(ForecastC, Yr %in% YOI)$total
df[1:16,"Age10+Biomass"] <- subset(mod1$timeseries[, c('Yr', 'Bio_smry')], Yr %in% YOI)$Bio_smry
df[1:16,"SpawnBio"] <-mod1$derived_quants[grep(paste0("SSB_",2015:2030,collapse = "|"), mod1$derived_quants$Label),"Value"]
df[1:16,"Depletion"] <- paste0(round(mod1$derived_quants[grep(paste0("Bratio_",2015:2030,collapse = "|"), mod1$derived_quants$Label),"Value"],3)*100,"%")
for(i in 2015:2030){ ## grab ovserved and/or forecast catch for all fleets f
df$FiveYrAvgCatch[df$Year == i] <- mean(c(mod1$catch$Obs[mod1$catch$Yr %in% c(i:(i-5))],
mod1$derived_quants[grep(paste0("ForeCatch_",i:(i-5),collapse = "|"), mod1$derived_quants$Label),"Value"]))
} ## end 5yr avg
df
round(df[,2:4],3)
df[,2:4] <- round(df[,2:4],2)
write.csv(df,file =paste0(rootdir,"/decision_table_base.csv"),row.names = FALSE)
write.csv(df,file =paste0(rootdir,"/decision_table_base.csv"),row.names = FALSE)
write.csv(df,file =paste0(rootdir,"/decision_table_base.csv"),row.names = FALSE)
write.csv(df,file =paste0(rootdir,"/decision_table_base.csv"),row.names = FALSE)
